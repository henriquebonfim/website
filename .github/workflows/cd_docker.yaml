name: Deploy to Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Only trigger on tags that start with 'v' (e.g., v1.0.0, v2.3.4)

jobs:
  build_and_deploy:
    name: Job - Build and Deploy to Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Step 1 - Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Step 2 - Extract Git tag
        id: git_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=$TAG" >> $GITHUB_OUTPUT
          echo "Tag extracted: $TAG"

      - name: Step 3 - Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SERVICE_ACCOUNT }}

      - name: Step 4 - Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Step 5 - Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.git_tag.outputs.VERSION }}
            ${{ vars.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ${{ vars.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.git_tag.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=Personal Website
            org.opencontainers.image.version=${{ steps.git_tag.outputs.VERSION }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
