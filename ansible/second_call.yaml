# configure.yaml
- hosts: all
  become: true
  vars:
    created_username: pafuncio

  tasks:
    - name: Check if user exists
      command: id -u "{{ created_username }}"
      register: user_check
      ignore_errors: true
      changed_when: false

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
      changed_when: false

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ created_username }}"
        state: present
        groups: sudo
        append: true
        create_home: true
        shell: /bin/bash 
      changed_when: false

    - name: Setup passwordless sudo
      lineinfile:
        path: /etc/sudoers.d/{{ created_username }}
        create: yes
        state: present
        line: '{{ created_username }} ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'
      changed_when: false

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ created_username }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ created_username }}"
        group: "{{ created_username }}"
      changed_when: false

    - name: Copy public key to remote server
      copy:
        src: "{{ playbook_dir }}/.ssh/ansible.pub"
        dest: "/home/{{ created_username }}/.ssh/ansible.pub"
        owner: "{{ created_username }}"
        group: "{{ created_username }}"
        mode: '0644'
      changed_when: false

    - name: Set authorized key for remote user
      ansible.posix.authorized_key:
        user: "{{ created_username }}"
        state: present
        key: "{{ lookup('file', '{{ playbook_dir }}/.ssh/ansible.pub') }}"
      changed_when: false

    - name: Restart sshd
      systemd:
        name: sshd
        state: restarted
      changed_when: false
